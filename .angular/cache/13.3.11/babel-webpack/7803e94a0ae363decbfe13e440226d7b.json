{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ChangeBgDirective = /*#__PURE__*/(() => {\n  class ChangeBgDirective {\n    constructor(el, render) {\n      this.el = el;\n      this.render = render;\n      this.isCorrect = false;\n    }\n\n    answer() {\n      if (this.isCorrect) {\n        this.render.setStyle(this.el.nativeElement, 'background', 'green');\n        this.render.setStyle(this.el.nativeElement, 'color', '#fff');\n        this.render.setStyle(this.el.nativeElement, 'border', '2px solid grey');\n      } else {\n        this.render.setStyle(this.el.nativeElement, 'background', 'red');\n        this.render.setStyle(this.el.nativeElement, 'color', '#fff');\n        this.render.setStyle(this.el.nativeElement, 'border', '2px solid grey');\n      }\n    }\n\n  }\n\n  ChangeBgDirective.ɵfac = function ChangeBgDirective_Factory(t) {\n    return new (t || ChangeBgDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  ChangeBgDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ChangeBgDirective,\n    selectors: [[\"\", \"appChangeBg\", \"\"]],\n    hostBindings: function ChangeBgDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ChangeBgDirective_click_HostBindingHandler() {\n          return ctx.answer();\n        });\n      }\n    },\n    inputs: {\n      isCorrect: \"isCorrect\"\n    }\n  });\n  return ChangeBgDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}